
What happens when you initialize a repository? Why do you need to do it?


    The git meta data is created to identify the directory as a git
    repository.  Before you can start tracking changes to the files in
    you repository you need to identify it as a repository.

How is the staging area different from the working directory and the
repository? What value do you think it offers?

    The staging area identifies files that are being worked on that
    are in the working directory.  Later, when you wish to commit your
    work to the repository it will be these files only that are
    committed.
    
How can you use the staging area to make sure you have one commit per
logical change?

    You can make as many changes to the working directory as you'd
    like, but then by staging the files that make up a logical change
    only, you can commit each logical change from the staged changes.


BRANCHES

What are some situations when branches would be helpful in keeping
your history organized? How would branches help?

     Branches would be handy for introducing a similar function but
     with an experimental feature.  It would let you keep that
     proposed change or feature isolated from the rest of the code, so
     that changes could continue with the main program.

How do the diagrams help you visualize the branch structure?

    They kind of help with the understanding of the parents of each
    node and how that connects to the branch labels.

What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?

    A merge takes two divergent code branches with different changes
    and brings them together to a single branch, to merge the
    functionlily and capabilities so work can continue on with the
    combined product.  The diagram helps display understanding of
    where the parts of the resulting branch came from.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing
merges manually?

    Automatic merging saves the user the time and trouble of manually
    merging branches where the differences are clear and should not
    require human intervention.  Where manual merging is advanageous
    is when the likelihood of auto merging would lead to problems,
    like code that will not compile.

